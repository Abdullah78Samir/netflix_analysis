# -*- coding: utf-8 -*-
"""netflix anaylsis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OusCpfkDXnVZQvcsxL97Ub7g6cutLUt9

import Libaries data
"""

import numpy as np
import pandas as pd
import plotly.express as px
from textblob import TextBlob

df = pd.read_csv('netflix_titles.csv')

"""Checking number of rows and columns in data"""

df.shape

"""checking content availble in Dataset"""

df.head()

"""how to check columns name of dataset"""

df.columns

"""Taking the count of tratings availble"""

group = df.groupby(['rating']).size().reset_index(name= 'counts')
print(group)

"""creating the piechart based on content tating"""

pieChart = px.pie(group, values='counts' , names='rating',title='Distribution of content ratings on Netflix')
pieChart.show()

"""Analyzing the top 5 Directors on Netflix




"""

df['director']= df['director'].fillna('not specified')
df.head()

directors_list = pd.DataFrame()
directors_list = df['director'].str.split(',', expand=True).stack()
directors_list = directors_list.to_frame()
directors_list.columns = ['Director']
directors = directors_list.groupby(['Director']).size().reset_index(name = 'Total count')
directors = directors[directors.Director != 'not specified']
directors = directors.sort_values(by=['Total count'], ascending= False)
top5D = directors.head()
print(top5D)

top5D = top5D.sort_values(by=['Total count'])
barChart = px.bar(top5D, x= 'Total count',y='Director', title = 'Top 5 Directors on Netflix')
barChart.show()

"""Analyzing the top 5 Author on Netflix

"""

df['cast'] = df['cast'].fillna('No cast specified')
cast_df = pd.DataFrame()
cast_df = df['cast'].str.split(',',expand= True).stack()
cast_df = cast_df.to_frame()
cast_df.columns = ['Actor']
actors = cast_df.groupby(['Actor']).size().reset_index(name= 'Total Count')
actors = actors[actors.Actor != 'No cast specified']
actors = actors.sort_values(by=['Total Count'],ascending=False)

top5A = actors.head()
top5A = top5A.sort_values(by=['Total Count'])
barChartTwo = px.bar(top5A, x ='Total Count', y = 'Actor', title = 'top 5 Actors on Netflix')
barChartTwo.show()

"""Analyzing the content produced on netflix based on year"""

dfOne = df[['type','release_year']]
dfOne = dfOne.rename(columns = {"release_year":"Release Year","type":"Type"})
dfTwo = dfOne.groupby(['Release Year','Type']).size().reset_index(name='Total Count')
print(dfTwo)

dfTwo = dfTwo[dfTwo['Release Year']> 2000]
graph = px.line(dfTwo, x ="Release Year",y= "Total Count",color = "Type", title = 'Trend of content on Netflix Every Year')
graph.show()

"""Analyzing the top 5 prodect Country on Netflix
 *italicized text*
"""

df['country'] = df['country'].fillna('No country specified')
country_df = pd.DataFrame()
country_df = df['country'].str.split(',',expand= True).stack()
country_df = country_df.to_frame()
country_df.columns = ['Product_Country']
products_country = country_df.groupby(['Product_Country']).size().reset_index(name= 'Total Count')
products_country = products_country[products_country.Product_Country != 'No country specified']
products_country = products_country.sort_values(by=['Total Count'],ascending=False)

top5A = products_country.head()
top5A = top5A.sort_values(by=['Total Count'])
barChartThree = px.bar(top5A, x ='Total Count', y = 'Product_Country', title = 'top 5 Product Country on Netflix')
barChartThree.show()

"""sentiment Anaylsis of Netflix Content"""

dfFour = df[['release_year','description']]
dfFour = dfFour.rename(columns= {'release_year':'Release Year','description':'Description'})
for index, row in dfFour.iterrows():
  d=row['Description']
  testimonial = TextBlob(d)
  p = testimonial.sentiment.polarity
  if  p==0:
    sent = 'Neutral'
  elif p > 0:
    sent = 'Positive'
  else:
    sent = 'Negative'
  dfFour.loc[[index, 2], 'Sentiment'] = sent
dfFour = dfFour.groupby(['Release Year','Sentiment']).size().reset_index(name= 'Total Count')
dfFour = dfFour[dfFour['Release Year']>2005]
graphTwo = px.bar(dfFour,x= "Release Year",y = "Total Count",color ="Sentiment",title = "Sentiment Anaylsis of content on Netflix" )
graphTwo.show()